
package sams;

import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
public class LOGIN extends javax.swing.JFrame {
public class CollegeIDHolder {
    private static int teacherCollegeID;

    public static int getTeacherCollegeID() {
        return teacherCollegeID;
    }

    public static void setTeacherCollegeID(int collegeID) {
        teacherCollegeID = collegeID;
    }
}
public class TeacherIDHolder {
    private static int teacherID;

    public static int getTeacherID() {
        return teacherID;
    }

    public static void setTeacherID(int tID) {
        teacherID = tID;
    }
}
Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;
    public LOGIN() {
        super("Login");
        initComponents();
        conn = DB.Connection();                 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        pass = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        email = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 255, 102));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 2, true));

        jPanel2.setBackground(new java.awt.Color(102, 255, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(51, 153, 255), new java.awt.Color(102, 255, 255)));

        jLabel4.setBackground(new java.awt.Color(102, 255, 102));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("LOGIN");
        jLabel4.setToolTipText("");
        jLabel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 153, 255), 4, true));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("EMAIL");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("PASSWORD");

        pass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passKeyPressed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(0, 204, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("SHOW");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel3MouseExited(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 204, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("LOGIN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 204, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setText("CANCEL");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });
        email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                emailKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(54, 54, 54)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(pass, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                            .addComponent(email))
                        .addGap(34, 34, 34)
                        .addComponent(jLabel3)
                        .addGap(0, 86, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pass)))
                .addGap(66, 66, 66)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(81, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(706, 501));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

public static String pHash(String password) {
    try {
        MessageDigest md = MessageDigest.getInstance("SHA-256");
        md.update(password.getBytes(StandardCharsets.UTF_8));
        byte[] hashedBytes = md.digest();
        StringBuilder sb = new StringBuilder();
        for (byte b : hashedBytes) {
            sb.append(String.format("%02x", b));
        }
        return sb.toString();
    } catch (NoSuchAlgorithmException e) {
                throw new RuntimeException("Error hashing password", e);
    }
}
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         
int teacherCollegeID;
int teacherID ;
String adminCollege;
int adminCollegeID;
int adminID;

try {
    stmt = conn.createStatement();
    String userEmail = email.getText();
    String userPass = pHash(pass.getText());
    // First, check against the "admin" table
    String sadname=pHash(userEmail);
    String sadminSql = "SELECT * FROM super WHERE username = ? AND pass = ?";
    PreparedStatement sadminPreparedStatement = conn.prepareStatement(sadminSql);
    sadminPreparedStatement.setString(1, sadname);
    sadminPreparedStatement.setString(2, userPass);

    ResultSet sadminResultSet = sadminPreparedStatement.executeQuery();
    if (sadminResultSet.next()) {
        setVisible(false);
        SAHOME object = new SAHOME();    
        object.setVisible(true);
    } else {
    String adminSql = "SELECT * FROM admin WHERE mail = ? AND password = ?";
    PreparedStatement adminPreparedStatement = conn.prepareStatement(adminSql);
    adminPreparedStatement.setString(1, userEmail);
    adminPreparedStatement.setString(2, userPass);

    ResultSet adminResultSet = adminPreparedStatement.executeQuery();
    if (adminResultSet.next()) {
        try{
        adminID = adminResultSet.getInt("id"); 
            TeacherIDHolder.setTeacherID(adminID);
            adminCollege = adminResultSet.getString("college");
            String acSql = "SELECT * FROM college WHERE clgname = ? ";
            PreparedStatement pstm = conn.prepareStatement(acSql);
            pstm.setString(1, adminCollege);
        ResultSet adminC = pstm.executeQuery(); 
        if(adminC.next()){
            adminCollegeID = adminC.getInt("clgid");
            CollegeIDHolder.setTeacherCollegeID(adminCollegeID); 
        }
        else{
           JOptionPane.showMessageDialog(null, "College Id Not Found");
        }
        }catch(Exception e){
           JOptionPane.showMessageDialog(null, e);

        }
        // Login successful for admin
        setVisible(false);
        AHOME object = new AHOME();    
        object.setVisible(true);
    } else {
        // If not found in the admin table, check against the "teacher" table
        String teacherSql = "SELECT * FROM teacher WHERE mail = ? AND password = ?";
        PreparedStatement teacherPreparedStatement = conn.prepareStatement(teacherSql);
        teacherPreparedStatement.setString(1, userEmail);
        teacherPreparedStatement.setString(2, userPass);

        ResultSet teacherResultSet = teacherPreparedStatement.executeQuery();

        if (teacherResultSet.next()) {
            // Login successful for teacher
            teacherID = teacherResultSet.getInt("id"); 
            TeacherIDHolder.setTeacherID(teacherID);
            teacherCollegeID = teacherResultSet.getInt("clgid"); 
            CollegeIDHolder.setTeacherCollegeID(teacherCollegeID); 
            setVisible(false);
            thome object = new thome();
            object.setVisible(true);
        } else {
            String studentSql = "SELECT * FROM student WHERE stdmail = ? AND stdpassword = ?";
            PreparedStatement studentPreparedStatement = conn.prepareStatement(studentSql);
            studentPreparedStatement.setString(1, userEmail);
            studentPreparedStatement.setString(2, userPass);

            ResultSet studentResultSet = studentPreparedStatement.executeQuery();

            if (studentResultSet.next()) {
                // Login successful for student
                setVisible(false);
                thome object = new thome();
                object.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Email or Password is invalid");
            }
        }
    }
}
} catch (HeadlessException | SQLException e) {
    JOptionPane.showMessageDialog(null, e);
}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
                System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jLabel3MouseClicked

    private void jLabel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseEntered
        // TODO add your handling code here:
                pass.setEchoChar((char) 0);
    }//GEN-LAST:event_jLabel3MouseEntered

    private void jLabel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseExited
        // TODO add your handling code here:
                pass.setEchoChar('*');
    }//GEN-LAST:event_jLabel3MouseExited

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void emailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            pass.requestFocus();
        }
    }//GEN-LAST:event_emailKeyPressed

    private void passKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
         
int teacherCollegeID = 0;
int teacherID = 0;
String adminCollege = null;
int adminCollegeID = 0;
int adminID = 0;

try {
    stmt = conn.createStatement();
    String userEmail = email.getText();
    String userPass = pHash(pass.getText());
    // First, check against the "admin" table
    String sadname=pHash(userEmail);
    String sadminSql = "SELECT * FROM super WHERE username = ? AND pass = ?";
    PreparedStatement sadminPreparedStatement = conn.prepareStatement(sadminSql);
    sadminPreparedStatement.setString(1, sadname);
    sadminPreparedStatement.setString(2, userPass);

    ResultSet sadminResultSet = sadminPreparedStatement.executeQuery();
    if (sadminResultSet.next()) {
        setVisible(false);
        SAHOME object = new SAHOME();    
        object.setVisible(true);
    } else {
    String adminSql = "SELECT * FROM admin WHERE mail = ? AND password = ?";
    PreparedStatement adminPreparedStatement = conn.prepareStatement(adminSql);
    adminPreparedStatement.setString(1, userEmail);
    adminPreparedStatement.setString(2, userPass);

    ResultSet adminResultSet = adminPreparedStatement.executeQuery();
    if (adminResultSet.next()) {
        try{
        adminID = adminResultSet.getInt("id"); 
            TeacherIDHolder.setTeacherID(adminID);
            adminCollege = adminResultSet.getString("college");
            String acSql = "SELECT * FROM college WHERE clgname = ? ";
            PreparedStatement pstm = conn.prepareStatement(acSql);
            pstm.setString(1, adminCollege);
        ResultSet adminC = pstm.executeQuery(); 
        if(adminC.next()){
            adminCollegeID = adminC.getInt("clgid");
            CollegeIDHolder.setTeacherCollegeID(adminCollegeID); 
        }
        else{
           JOptionPane.showMessageDialog(null, "College Id Not Found");
        }
        }catch(Exception e){
           JOptionPane.showMessageDialog(null, e);

        }
        // Login successful for admin
        setVisible(false);
        AHOME object = new AHOME();    
        object.setVisible(true);
    } else {
        // If not found in the admin table, check against the "teacher" table
        String teacherSql = "SELECT * FROM teacher WHERE mail = ? AND password = ?";
        PreparedStatement teacherPreparedStatement = conn.prepareStatement(teacherSql);
        teacherPreparedStatement.setString(1, userEmail);
        teacherPreparedStatement.setString(2, userPass);

        ResultSet teacherResultSet = teacherPreparedStatement.executeQuery();

        if (teacherResultSet.next()) {
            // Login successful for teacher
            teacherID = teacherResultSet.getInt("id"); 
            TeacherIDHolder.setTeacherID(teacherID);
            teacherCollegeID = teacherResultSet.getInt("clgid"); 
            CollegeIDHolder.setTeacherCollegeID(teacherCollegeID); 
            setVisible(false);
            thome object = new thome();
            object.setVisible(true);
        } else {
            String studentSql = "SELECT * FROM student WHERE stdmail = ? AND stdpassword = ?";
            PreparedStatement studentPreparedStatement = conn.prepareStatement(studentSql);
            studentPreparedStatement.setString(1, userEmail);
            studentPreparedStatement.setString(2, userPass);

            ResultSet studentResultSet = studentPreparedStatement.executeQuery();

            if (studentResultSet.next()) {
                // Login successful for student
                setVisible(false);
                thome object = new thome();
                object.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "Email or Password is invalid");
            }
        }
    }
}
} catch (HeadlessException | SQLException e) {
    JOptionPane.showMessageDialog(null, e);
}        }
    }//GEN-LAST:event_passKeyPressed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new LOGIN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField email;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField pass;
    // End of variables declaration//GEN-END:variables
}
