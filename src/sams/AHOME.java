package sams;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.nio.charset.StandardCharsets;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.*;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
/* *
 * @author Suja
 */
public final class AHOME extends javax.swing.JFrame {

    /**
     * Creates new form THOME
     */
    Connection conn = null;
    Statement stmt = null;
    ResultSet rs = null;
    private DefaultTableModel model1;
    private String imagePath;
    private int rowIndex;
    int tID = LOGIN.CollegeIDHolder.getTeacherCollegeID();
    
    public AHOME() {
         super("Admin");
        initComponents();
        conn = DB.Connection(); 
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jButton17 = new javax.swing.JButton();
        jPanel25 = new javax.swing.JPanel();
        img2 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        tname = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        temail = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tdept = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tphone = new javax.swing.JTextField();
        tcid = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jPanel26 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        tid = new javax.swing.JTextField();
        jButton25 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel28 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        ttable = new javax.swing.JTable();
        jPanel29 = new javax.swing.JPanel();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        sname = new javax.swing.JTextField();
        semail = new javax.swing.JTextField();
        sphone = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        sfname = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        smname = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jPanel34 = new javax.swing.JPanel();
        jButton27 = new javax.swing.JButton();
        jPanel35 = new javax.swing.JPanel();
        simg = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        sbranch = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        usn = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        dob = new com.toedter.calendar.JDateChooser();
        jLabel27 = new javax.swing.JLabel();
        gen = new javax.swing.JComboBox<>();
        jLabel56 = new javax.swing.JLabel();
        sem = new javax.swing.JComboBox<>();
        jLabel57 = new javax.swing.JLabel();
        sec = new javax.swing.JComboBox<>();
        jPanel5 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        susn = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        stable = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jPanel41 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        ausn = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        jPanel42 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        attable = new javax.swing.JTable();
        jPanel43 = new javax.swing.JPanel();
        jButton38 = new javax.swing.JButton();
        jButton39 = new javax.swing.JButton();
        jButton40 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        artable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 255, 102));

        jPanel2.setBackground(new java.awt.Color(0, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setBackground(new java.awt.Color(102, 255, 102));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("STUDENT ATTENDENCE MANAGEMENT SYSTEM");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(161, 161, 161))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
        );

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        jPanel21.setBackground(new java.awt.Color(0, 204, 255));

        jPanel22.setBackground(new java.awt.Color(102, 255, 102));
        jPanel22.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 4, true));

        jPanel23.setBackground(new java.awt.Color(102, 255, 102));

        jPanel24.setBackground(new java.awt.Color(102, 255, 102));
        jPanel24.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255), 4));

        jButton17.setBackground(new java.awt.Color(51, 153, 255));
        jButton17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton17.setText("Browse");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jPanel25.setBackground(new java.awt.Color(204, 204, 204));
        jPanel25.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 4, true));

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(img2, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(img2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("Image");

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 42, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                        .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(jPanel24Layout.createSequentialGroup()
                        .addComponent(jPanel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        tname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tnameActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Name");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Email");

        temail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temailActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Department");

        tdept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tdeptActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Phone");

        tphone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tphoneActionPerformed(evt);
            }
        });
        tphone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tphoneKeyTyped(evt);
            }
        });

        tcid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tcidActionPerformed(evt);
            }
        });
        tcid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tcidKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("ID");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(tdept, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tphone, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(temail, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tname, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tcid, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tcid, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(temail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tdept, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tphone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, 391, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel23, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel26.setBackground(new java.awt.Color(102, 255, 102));
        jPanel26.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 255), 4, true));

        jPanel27.setBackground(new java.awt.Color(102, 255, 102));
        jPanel27.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 4, true));

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Search Teacher");

        jButton25.setBackground(new java.awt.Color(0, 153, 255));
        jButton25.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton25.setText("Search");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(51, 153, 255));
        jButton9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton9.setText("Refresh");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(tid, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton25, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tid, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel28.setBackground(new java.awt.Color(102, 255, 102));
        jPanel28.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 4, true));

        ttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Teacher ID", "Teacher Name", "Email", "Department", "Phone No", "Image Path"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ttable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ttableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(ttable);

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jPanel29.setBackground(new java.awt.Color(102, 255, 102));
        jPanel29.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 4, true));

        jButton20.setBackground(new java.awt.Color(51, 153, 255));
        jButton20.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton20.setText("Add New");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jButton21.setBackground(new java.awt.Color(51, 153, 255));
        jButton21.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton21.setText("Update");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jButton22.setBackground(new java.awt.Color(51, 153, 255));
        jButton22.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton22.setText("Delete");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton23.setBackground(new java.awt.Color(51, 153, 255));
        jButton23.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton23.setText("LogOut");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jButton24.setBackground(new java.awt.Color(51, 153, 255));
        jButton24.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton24.setText("Clear");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Teachers", jPanel21);

        jPanel3.setBackground(new java.awt.Color(0, 204, 255));

        jPanel4.setBackground(new java.awt.Color(102, 255, 102));
        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 4, true));

        jPanel6.setBackground(new java.awt.Color(102, 255, 102));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Name");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Email");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Phone No");

        sname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snameActionPerformed(evt);
            }
        });
        sname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                snameKeyReleased(evt);
            }
        });

        semail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semailActionPerformed(evt);
            }
        });

        sphone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sphoneActionPerformed(evt);
            }
        });
        sphone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sphoneKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Father's Name");

        sfname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sfnameActionPerformed(evt);
            }
        });
        sfname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sfnameKeyReleased(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Mother's Name");

        smname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smnameActionPerformed(evt);
            }
        });
        smname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                smnameKeyReleased(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("D.0.B.");

        jPanel34.setBackground(new java.awt.Color(102, 255, 102));
        jPanel34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 255), 4));

        jButton27.setBackground(new java.awt.Color(51, 153, 255));
        jButton27.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton27.setText("Browse");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });

        jPanel35.setBackground(new java.awt.Color(204, 204, 204));
        jPanel35.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 4, true));

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(simg, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(simg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Image");

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 2, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addComponent(jButton27, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(jPanel34Layout.createSequentialGroup()
                        .addComponent(jPanel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        sbranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sbranchActionPerformed(evt);
            }
        });
        sbranch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sbranchKeyReleased(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Branch");

        usn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usnActionPerformed(evt);
            }
        });
        usn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usnKeyReleased(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("USN");

        dob.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dobKeyTyped(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setText("Gender");

        gen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        jLabel56.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(255, 255, 255));
        jLabel56.setText("Semester");

        sem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        sem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select-Semester", "1", "2", "3", "4", "5", "6", "7", "8", " " }));

        jLabel57.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(255, 255, 255));
        jLabel57.setText("Section");

        sec.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        sec.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select-Section", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K" }));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(sphone, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(sec, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(gen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                    .addComponent(jLabel20)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(sbranch)
                                .addComponent(semail)
                                .addComponent(sname)
                                .addComponent(sfname)
                                .addComponent(smname)
                                .addComponent(usn, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                .addComponent(sem, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(34, 34, 34))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sname, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sfname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(smname, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gen, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(dob, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(semail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sbranch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel56, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sec, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sphone, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(102, 255, 102));
        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 255), 4, true));

        jPanel9.setBackground(new java.awt.Color(102, 255, 102));
        jPanel9.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 4, true));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Search Student");

        susn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                susnActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(51, 204, 255));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(51, 204, 255));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setText("Refresh");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(susn, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(susn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel10.setBackground(new java.awt.Color(102, 255, 102));
        jPanel10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 4, true));

        stable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "USN", "Name", "Father's Name", "Mother's Name", "Gender", "D.O.B", "Email", "Branch", "Semester", "Section", "Phone No", "Image Path"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        stable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(stable);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
        );

        jPanel11.setBackground(new java.awt.Color(102, 255, 102));
        jPanel11.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 4, true));

        jButton4.setBackground(new java.awt.Color(51, 153, 255));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton4.setText("Add New");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(51, 153, 255));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton5.setText("Update");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(51, 153, 255));
        jButton6.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton6.setText("Delete");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(51, 153, 255));
        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton7.setText("LogOut");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(51, 153, 255));
        jButton8.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton8.setText("Clear");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Student", jPanel3);

        jPanel13.setBackground(new java.awt.Color(0, 204, 255));

        jPanel17.setBackground(new java.awt.Color(102, 255, 102));
        jPanel17.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 255), 4, true));

        jPanel41.setBackground(new java.awt.Color(102, 255, 102));
        jPanel41.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 4, true));

        jLabel30.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setText("Search Student");

        jButton14.setBackground(new java.awt.Color(51, 204, 255));
        jButton14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton14.setText("Search");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton35.setBackground(new java.awt.Color(51, 204, 255));
        jButton35.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton35.setText("Refresh");
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel41Layout = new javax.swing.GroupLayout(jPanel41);
        jPanel41.setLayout(jPanel41Layout);
        jPanel41Layout.setHorizontalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(ausn, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 520, Short.MAX_VALUE)
                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(jButton35, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        jPanel41Layout.setVerticalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ausn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton35, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel42.setBackground(new java.awt.Color(102, 255, 102));
        jPanel42.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 4, true));

        attable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Subject", "Teacher", "Attendence %"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(attable);

        javax.swing.GroupLayout jPanel42Layout = new javax.swing.GroupLayout(jPanel42);
        jPanel42.setLayout(jPanel42Layout);
        jPanel42Layout.setHorizontalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 735, Short.MAX_VALUE))
        );
        jPanel42Layout.setVerticalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 416, Short.MAX_VALUE)
            .addGroup(jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE))
        );

        jPanel43.setBackground(new java.awt.Color(102, 255, 102));
        jPanel43.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(102, 255, 255), 4, true));

        jButton38.setBackground(new java.awt.Color(51, 153, 255));
        jButton38.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton38.setText("Clear");
        jButton38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton38ActionPerformed(evt);
            }
        });

        jButton39.setBackground(new java.awt.Color(51, 153, 255));
        jButton39.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton39.setText("LogOut");
        jButton39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton39ActionPerformed(evt);
            }
        });

        jButton40.setBackground(new java.awt.Color(51, 153, 255));
        jButton40.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jButton40.setText("Print");
        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel43Layout = new javax.swing.GroupLayout(jPanel43);
        jPanel43.setLayout(jPanel43Layout);
        jPanel43Layout.setHorizontalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel43Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton38, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(434, 434, 434)
                .addComponent(jButton40, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton39, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
        );
        jPanel43Layout.setVerticalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel43Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton38, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton39, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton40, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 255, 255), 4, true));

        artable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Semester", "Section", "USN", "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        artable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                artableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(artable);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Attendence Report", jPanel13);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1316, 733));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void init(){
        tvt();
        tvr();
        tvs();
        tva();
        showAllSRecord();
        showAllTRecord();
        
    }
    private void tvt(){
        model1=(DefaultTableModel) ttable.getModel();
        ttable.setRowHeight(30);
        ttable.setShowGrid(true);
        ttable.setGridColor(Color.black);
        ttable.setBackground(Color.white);
        
    }
    private void tvr(){
        model1=(DefaultTableModel) artable.getModel();
        artable.setRowHeight(30);
        artable.setShowGrid(true);
        artable.setGridColor(Color.black);
        artable.setBackground(Color.white);
        
    }
    private void tvs(){
        model1=(DefaultTableModel) stable.getModel();
        stable.setRowHeight(30);
        stable.setShowGrid(true);
        stable.setGridColor(Color.black);
        stable.setBackground(Color.white);
        
    }
     private void tva(){
        model1=(DefaultTableModel) attable.getModel();
        attable.setRowHeight(30);
        attable.setShowGrid(true);
        attable.setGridColor(Color.black);
        attable.setBackground(Color.white);
        
    }
    private void cleart(){
        tcid.setText(null);
        tname.setText(null);
        temail.setText(null);
        tdept.setText(null);
        tphone.setText(null);
        img2.setIcon(null);
    }public void showAllTRecord() {
    try {
        int clgid = LOGIN.CollegeIDHolder.getTeacherCollegeID();
        String sql = "SELECT id, name, mail, branch, phone, ipath FROM teacher WHERE clgid=?";
        PreparedStatement preparedStatement = conn.prepareStatement(sql);
        preparedStatement.setInt(1, clgid);
        ResultSet res = preparedStatement.executeQuery(); // Remove sql parameter here

        String[] columnNames = {"Teacher ID", "Teacher Name", "Email", "Department", "Phone No", "Image Path"};

        DefaultTableModel model = new DefaultTableModel(columnNames, 0);

        while (res.next()) {
            Object[] row = {res.getInt("id"), res.getString("name"), res.getString("mail"), res.getString("branch"), res.getString("phone"), res.getString("ipath")};
            model.addRow(row);
        }

        ttable.setModel(model);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, e);
    }
}

public void showTRecord(int id){
      try {
          int clgid = 0;
    clgid=LOGIN.CollegeIDHolder.getTeacherCollegeID();
    String sql = "SELECT id,name,mail,branch,phone,ipath FROM teacher WHERE id=? AND clgid=?";
    PreparedStatement preparedStatement = conn.prepareStatement(sql);
    preparedStatement.setInt(1, id);
    preparedStatement.setInt(2, clgid);

    ResultSet res = preparedStatement.executeQuery();

    String[] columnNames = {"Teacher ID", "Teacher Name","Email","Department","Phone No","Image Path"};

    DefaultTableModel model = new DefaultTableModel(columnNames, 0);

    while (res.next()) {
        Object[] row = {res.getInt("id"),res.getString("name"),res.getString("mail"),res.getString("branch"),res.getString("phone"),res.getString("ipath") };
        model.addRow(row);
    }
    // Set the table model to the table
    ttable.setModel(model);
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, e);
}
}




public static String pHash(String password) {
    try {
        MessageDigest md = MessageDigest.getInstance("SHA-256");
        md.update(password.getBytes(StandardCharsets.UTF_8));
        byte[] hashedBytes = md.digest();
        StringBuilder sb = new StringBuilder();
        for (byte b : hashedBytes) {
            sb.append(String.format("%02x", b));
        }
        return sb.toString();
    } catch (NoSuchAlgorithmException e) {
                throw new RuntimeException("Error hashing password", e);
    }
}
    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        // TODO add your handling code here:
        cleart();
        showAllTRecord();
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
        int a= JOptionPane.showConfirmDialog(this,"Do you want to logout now?","Select",JOptionPane.YES_NO_OPTION);
        if(a==0){
            setVisible(false);
            LOGIN object =new LOGIN();
            object.setVisible(true);
        }
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
        int yn= JOptionPane.showConfirmDialog(null,"All of Teacher data will be deleted","Select",JOptionPane.OK_CANCEL_OPTION,0);
        if(yn==JOptionPane.OK_OPTION){
            try {
                int id = Integer.parseInt(tid.getText());
                String deleteSql = "DELETE FROM TEACHER WHERE id=?";
                PreparedStatement deleteStatement = conn.prepareStatement(deleteSql);
                deleteStatement.setInt(1, id);
                deleteStatement.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
        int clgid = 0;
        clgid=LOGIN.CollegeIDHolder.getTeacherCollegeID();
        // Validate compulsory input
        String name = tname.getText();
        String mail = temail.getText();
        String branch = tdept.getText();
        String phone = tphone.getText();
        String password = temail.getText();
        if (name.isEmpty() || mail.isEmpty() || branch.isEmpty() ||clgid==0|| phone.isEmpty() || password.isEmpty()||imagePath==null) {
            JOptionPane.showMessageDialog(null, "All fields are required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!mail.matches("^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,4}$")) {
            JOptionPane.showMessageDialog(null, "Invalid email format");
        }  else {
            String checkDuplicateSql = "SELECT COUNT(*) FROM student WHERE mail = ?";
            try (PreparedStatement checkStatement = conn.prepareStatement(checkDuplicateSql)) {
                checkStatement.setString(1, mail);
                ResultSet resultSet = checkStatement.executeQuery();
                resultSet.next();
                int count = resultSet.getInt(1);
                if (count > 0) {
                    JOptionPane.showMessageDialog(null, "Email already exists");
                    return; // Exit the method, no need to proceed with insertion
                }
                String hashedPassword = pHash(password);

                if (name.isEmpty() || mail.isEmpty() || branch.isEmpty() || phone.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "All fields are required", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                // Prepare the SQL query with PreparedStatement
                String sql = "UPDATE teacher SET clgid=?, password=?, mail=?, name=?, branch=?, phone=?,ipath=? WHERE id=?";
                try (PreparedStatement updateStatement = conn.prepareStatement(sql)) {
                    // Assuming tid is a JTextField for entering teacher ID
                    int id = Integer.parseInt(tid.getText());

                    updateStatement.setInt(1, clgid);
                    updateStatement.setString(2, hashedPassword);
                    updateStatement.setString(3, mail);
                    updateStatement.setString(4, name);
                    updateStatement.setString(5, branch);
                    updateStatement.setString(6, phone);
                    updateStatement.setString(7, imagePath);
                    updateStatement.setInt(8, id);

                    // Use executeUpdate() for UPDATE statements
                    int rowsAffected = updateStatement.executeUpdate();

                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(null, "Data is successfully updated");
                    } else {
                        JOptionPane.showMessageDialog(null, "Update failed");
                    }
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Invalid teacher ID", "Error", JOptionPane.ERROR_MESSAGE);
            } catch (SQLException e) {
                // Handle SQL exceptions
                JOptionPane.showMessageDialog(null, "SQL Exception: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            } catch (Exception e) {
                // Handle other exceptions
                JOptionPane.showMessageDialog(null, "Exception: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:

        int clgid = 0;
        clgid=LOGIN.CollegeIDHolder.getTeacherCollegeID();

        // Insert Teacher Information
        String name = tname.getText();
        String mail = temail.getText();
        String branch = tdept.getText();
        String phone = tphone.getText();
        String password = temail.getText();
        if (name.isEmpty() || mail.isEmpty() || branch.isEmpty() || phone.isEmpty() || password.isEmpty()||imagePath==null) {
            JOptionPane.showMessageDialog(null, "All fields are required", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (!mail.matches("^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,4}$")) {
            JOptionPane.showMessageDialog(null, "Invalid email format");
        }  else {
            String checkDuplicateSql = "SELECT COUNT(*) FROM teacher WHERE mail = ?";
            try (PreparedStatement checkStatement = conn.prepareStatement(checkDuplicateSql)) {
                checkStatement.setString(1, mail);
                ResultSet resultSet = checkStatement.executeQuery();
                resultSet.next();
                int count = resultSet.getInt(1);
                if (count > 0) {
                    JOptionPane.showMessageDialog(null, "Email already exists");
                    return; // Exit the method, no need to proceed with insertion
                }

                String hashedPassword = pHash(password);

                String sql = "INSERT INTO teacher(clgid, password, mail, name, branch, phone,ipath) VALUES (?, ?, ?, ?, ?, ?,?)";
                try (PreparedStatement insertStatement = conn.prepareStatement(sql)) {
                    insertStatement.setInt(1, clgid);
                    insertStatement.setString(2, hashedPassword);
                    insertStatement.setString(3, mail);
                    insertStatement.setString(4, name);
                    insertStatement.setString(5, branch);
                    insertStatement.setString(6, phone);
                    insertStatement.setString(7, imagePath);

                    // Use executeUpdate() for INSERT statements
                    int rowsAffected = insertStatement.executeUpdate();

                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(null, "Data is successfully inserted");
                    } else {
                        JOptionPane.showMessageDialog(null, "Insertion failed");
                    }
                }
            }catch (Exception e) {
                // Handle the SQL exception appropriately, log it, or show a message
                JOptionPane.showMessageDialog(null, "SQL Exception: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_jButton20ActionPerformed

    private void ttableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ttableMouseClicked
        // TODO add your handling code here:
        model1=(DefaultTableModel) ttable.getModel();
        rowIndex = ttable.getSelectedRow();
        tcid.setText(model1.getValueAt(rowIndex,0).toString());
        tname.setText(model1.getValueAt(rowIndex,1).toString());
        temail.setText(model1.getValueAt(rowIndex,2).toString());
        tdept.setText(model1.getValueAt(rowIndex,3).toString());
        tphone.setText(model1.getValueAt(rowIndex,4).toString());

    }//GEN-LAST:event_ttableMouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        tid.setText(null);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
        try {
            if(tid.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Enter Teacher ID No.");
                return;
            }
            int clgid = 0;
            clgid=LOGIN.CollegeIDHolder.getTeacherCollegeID();
            // Prepare and execute the SQL query with PreparedStatement
            String sql = "SELECT * FROM TEACHER WHERE id=? AND clgid=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql);

            // Assuming tid is a JTextField for entering teacher ID
            int id = Integer.parseInt(tid.getText());
            preparedStatement.setInt(1, id);
            preparedStatement.setInt(2, clgid);
            showTRecord(id);
            // Execute the query
            ResultSet trs = preparedStatement.executeQuery();

            // Process the result set
            if (trs.next()) {
                int aaaid = trs.getInt("id");
                tcid.setText(Integer.toString(aaaid));
                tname.setText(trs.getString("name"));
                temail.setText(trs.getString("mail"));
                tdept.setText(trs.getString("branch"));
                tphone.setText(trs.getString("phone"));
                String path=trs.getString("ipath");
                imagePath=path;
                img2.setIcon(imageAdjust(path,null));
            } else {
                JOptionPane.showMessageDialog(null, "Record Not Found");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton25ActionPerformed

    private void tcidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tcidKeyTyped
        // TODO add your handling code here:
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();

        }
    }//GEN-LAST:event_tcidKeyTyped

    private void tcidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tcidActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_tcidActionPerformed

    private void tphoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tphoneKeyTyped
        // TODO add your handling code here:
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();

        }
    }//GEN-LAST:event_tphoneKeyTyped

    private void tphoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tphoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tphoneActionPerformed

    private void tdeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tdeptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tdeptActionPerformed

    private void temailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_temailActionPerformed

    private void tnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tnameActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        imagePath=null;
        JFileChooser f= new JFileChooser();
        f.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter fil = new FileNameExtensionFilter("*.image","jpg","gif","png");
        f.addChoosableFileFilter(fil);
        int op=f.showSaveDialog(f);
        if(op==JFileChooser.APPROVE_OPTION){
            File sf=f.getSelectedFile();
            String path = sf.getAbsolutePath();
            img2.setIcon(imageAdjust(path,null));
            imagePath = path;
        }
        else{
            JOptionPane.showMessageDialog(null, "No Image selected");
        }

    }//GEN-LAST:event_jButton17ActionPerformed

    private void snameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_snameActionPerformed

    private void snameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_snameKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_snameKeyReleased

    private void semailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_semailActionPerformed

    private void sphoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sphoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sphoneActionPerformed

    private void sphoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sphoneKeyTyped
        // TODO add your handling code here:
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();

        }
    }//GEN-LAST:event_sphoneKeyTyped

    private void sfnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sfnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sfnameActionPerformed

    private void sfnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sfnameKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_sfnameKeyReleased

    private void smnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_smnameActionPerformed

    private void smnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_smnameKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_smnameKeyReleased

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        // TODO add your handling code here:
        imagePath=null;
        JFileChooser f= new JFileChooser();
        f.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter fil = new FileNameExtensionFilter("*.image","jpg","gif","png");
        f.addChoosableFileFilter(fil);
        int op=f.showSaveDialog(f);
        if(op==JFileChooser.APPROVE_OPTION){
            File sf=f.getSelectedFile();
            String path = sf.getAbsolutePath();
            simg.setIcon(imageAdjust(path,null));
            imagePath = path;
        }
        else{
            JOptionPane.showMessageDialog(null, "No Image selected");
        }

    }//GEN-LAST:event_jButton27ActionPerformed

    private void sbranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sbranchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sbranchActionPerformed

    private void sbranchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sbranchKeyReleased
        // TODO add your handling code here:
        int pos = sbranch.getCaretPosition();
        sbranch.setText(sbranch.getText().toUpperCase());
        sbranch.setCaretPosition(pos);
    }//GEN-LAST:event_sbranchKeyReleased

    private void usnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usnActionPerformed

    private void usnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usnKeyReleased
        // TODO add your handling code here:
        int pos = usn.getCaretPosition();
        usn.setText(usn.getText().toUpperCase());
        usn.setCaretPosition(pos);

    }//GEN-LAST:event_usnKeyReleased

    private void dobKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dobKeyTyped
        // TODO add your handling code here:
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();

        }
    }//GEN-LAST:event_dobKeyTyped

    private void susnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_susnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_susnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            if(susn.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Enter Teacher ID No.");
                return;
            }
            int clgid = 0;
            clgid=LOGIN.CollegeIDHolder.getTeacherCollegeID();
            // Prepare and execute the SQL query with PreparedStatement
            String sql = "SELECT * FROM student WHERE USN=? AND clgid=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql);

            // Assuming tid is a JTextField for entering teacher ID
            String id = susn.getText();
            preparedStatement.setString(1, id);
            preparedStatement.setInt(2, clgid);
            showSRecord(id);
            // Execute the query
            ResultSet trs = preparedStatement.executeQuery();

            // Process the result set
            if (trs.next()) {
                sname.setText(trs.getString("stdname"));
                sfname.setText(trs.getString("father"));
                smname.setText(trs.getString("mother"));
                semail.setText(trs.getString("stdmail"));
                sbranch.setText(trs.getString("stdbranch"));
                usn.setText(trs.getString("USN"));
                sphone.setText(trs.getString("phone"));
                Date d= trs.getDate("dob");
                dob.setDate(d);

                String gender = trs.getString("gender");
                if(  gender.equals("Male")){
                    gen.setSelectedIndex(0);
                }
                else{
                    gen.setSelectedIndex(1);
                }
                String path=trs.getString("siPath");
                imagePath=path;
                simg.setIcon(imageAdjust(path,null));
            } else {
                JOptionPane.showMessageDialog(null, "Record Not Found");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        susn.setText(null);
    }//GEN-LAST:event_jButton3ActionPerformed

private void clears(){
    sname.setText(null);
    sfname.setText(null);
    smname.setText(null);
    semail.setText(null);
    sbranch.setText(null);
    usn.setText(null);
    sphone.setText(null);
   dob.setDate(null);
    gen.setSelectedIndex(0);
    sem.setSelectedIndex(0);
    sec.setSelectedIndex(0);
    simg.setIcon(null);
    imagePath=null;
}
public boolean isEmpty(){
    if(sname.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, " Student Name is missing");
        return false;
    }
    if(sfname.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, " Student Father name is missing");
        return false;
    }
    if(smname.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, " Student Mother name is missing");
        return false;
    }
    if(semail.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, " Student Email is missing");
        return false;
    }
    if (!semail.getText().matches("^[A-Za-z0-9._%-]+@[A-Za-z0-9.-]+\\.[A-Z|a-z]{2,4}$")) {
        JOptionPane.showMessageDialog(null, "Invalid email format");
    
    }
    if(sbranch.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, " Student Branch is missing");
        return false;
    }
    if(sem.getSelectedItem()=="Select-Semester"){
        JOptionPane.showMessageDialog(null, " Student Semester is missing");
        return false;
    }
    if(sec.getSelectedItem()=="Select-Section"){
        JOptionPane.showMessageDialog(null, " Student Section is missing");
        return false;
    }
    if(usn.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, " Student USN is missing");
        return false;
    }
    if(sphone.getText().isEmpty()){
        JOptionPane.showMessageDialog(null, " Student Phone no. is missing");
        return false;
    }
    if(sphone.getText().length()>=15){
        JOptionPane.showMessageDialog(null, "  Phone no. is too long");
        return false;
    }
   if(dob.getDate()==null){
        JOptionPane.showMessageDialog(null, " Student date of Birth is missing");
        return false;
   }
   if(dob.getDate().compareTo(new Date())>0){
        JOptionPane.showMessageDialog(null, " Invalid date of Birth");
        return false;
   }
   if(imagePath==null){
        JOptionPane.showMessageDialog(null, "No Image selected");
        return false;
   }
   return true;
}
    private void stableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stableMouseClicked
        model1=(DefaultTableModel) stable.getModel();
        rowIndex = stable.getSelectedRow();
        susn.setText(model1.getValueAt(rowIndex,0).toString());
        usn.setText(model1.getValueAt(rowIndex,0).toString());
        sname.setText(model1.getValueAt(rowIndex,1).toString());
        sfname.setText(model1.getValueAt(rowIndex,2).toString());
        smname.setText(model1.getValueAt(rowIndex,3).toString());
        semail.setText(model1.getValueAt(rowIndex,6).toString());
        sbranch.setText(model1.getValueAt(rowIndex,7).toString());
        sphone.setText(model1.getValueAt(rowIndex,10).toString());
        try {
            // TODO add your handling code here:

            Date date = new SimpleDateFormat("yyyy-MM-dd").parse(model1.getValueAt(rowIndex, 5).toString());
            dob.setDate(date);

        } catch (Exception e) {
    JOptionPane.showMessageDialog(null, e);
}
        String gender = model1.getValueAt(rowIndex,4).toString();
        if(  gender.equals("Male")){
            gen.setSelectedIndex(0);
        }
        else{
            gen.setSelectedIndex(1);
        }
        String path = model1.getValueAt(rowIndex,11).toString();
        imagePath=path;
        simg.setIcon(imageAdjust(path,null));
    }//GEN-LAST:event_stableMouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (isEmpty()) {
            String collegeIDAsString = String.valueOf(tID);
            String name = sname.getText();
            String usnx = usn.getText();
            String mail = semail.getText();
            String gender = (String) gen.getSelectedItem();
            String stbranch = sbranch.getText();
            String phone = sphone.getText();
            String section = (String) sec.getSelectedItem();
            String stsem = (String) sem.getSelectedItem();
            String password = semail.getText(); // Assuming spassword is a JTextField for password input
            String fname = sfname.getText();
            String mname = smname.getText();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String date = dateFormat.format(dob.getDate());

            String checkDuplicateSql = "SELECT COUNT(*) FROM student WHERE stdmail = ?";
            try (PreparedStatement checkStatement = conn.prepareStatement(checkDuplicateSql)) {
                checkStatement.setString(1, mail);
                ResultSet resultSet = checkStatement.executeQuery();
                resultSet.next();
                int count = resultSet.getInt(1);
                if (count > 0) {
                    JOptionPane.showMessageDialog(null, "Email already exists");
                    return; // Exit the method, no need to proceed with insertion
                }

                // Hash the password using SHA-256
                String hashedPassword = pHash(password);

                // INSERT INTO student table
                String studentSql = "INSERT INTO student(clgid, stdmail, stdpassword, stdname,"
                + " stdbranch, sem, stdsection, father, mother, phone, USN, gender, dob, siPath) " +
                "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";

                try (PreparedStatement preparedStatement = conn.prepareStatement(studentSql)) {
                    preparedStatement.setString(1, collegeIDAsString);
                    preparedStatement.setString(2, mail);
                    preparedStatement.setString(3, hashedPassword); // Use the hashed password
                    preparedStatement.setString(4, name);
                    preparedStatement.setString(5, stbranch);
                    preparedStatement.setString(6, stsem);
                    preparedStatement.setString(7, section);
                    preparedStatement.setString(8, fname);
                    preparedStatement.setString(9, mname);
                    preparedStatement.setString(10, phone);
                    preparedStatement.setString(11, usnx);
                    preparedStatement.setString(12, gender);
                    preparedStatement.setString(13, date);
                    preparedStatement.setString(14, imagePath);

                    int rowsAffected = preparedStatement.executeUpdate();

                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(null, "Student data is successfully inserted");

                        // INSERT INTO attendance table
                        String curdate = dateFormat.format(new Date());
                        String attendanceSql = "INSERT INTO attendance(clgid, tid, stdname,"
                        + " bname, sem, sname, usn, date, attres) " +
                        "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";

                        try (PreparedStatement atps = conn.prepareStatement(attendanceSql)) {
                            atps.setString(1, collegeIDAsString);
                            atps.setInt(2, tID);
                            atps.setString(3, name);
                            atps.setString(4, stbranch);
                            atps.setString(5, stsem);
                            atps.setString(6, section);
                            atps.setString(7, usnx);
                            atps.setString(8, curdate);
                            atps.setString(9, "Present");

                            int attendanceRowsAffected = atps.executeUpdate();

                            if (attendanceRowsAffected > 0) {
                                JOptionPane.showMessageDialog(null, "Attendance data is successfully inserted");
                                // Adjust this part based on your UI logic
                            } else {
                                JOptionPane.showMessageDialog(null, "Insertion of attendance data failed");
                            }
                        }
                        String attendanceRep = "INSERT INTO attrec(clgid, tid, stdname,"
                        + " branch, semester, section, usn, classcount,attper) " +
                        "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?,?)";

                        try (PreparedStatement atps = conn.prepareStatement(attendanceRep)) {
                            atps.setString(1, collegeIDAsString);
                            atps.setInt(2, tID);
                            atps.setString(3, name);
                            atps.setString(4, stbranch);
                            atps.setString(5, stsem);
                            atps.setString(6, section);
                            atps.setString(7, usnx);
                            atps.setInt(9,0 );
                            atps.setFloat(10, 0);

                            int attendanceRowsAffected = atps.executeUpdate();

                            if (attendanceRowsAffected > 0) {
                                JOptionPane.showMessageDialog(null, "Attendance data is successfully inserted");
                                // Adjust this part based on your UI logic
                            } else {
                                JOptionPane.showMessageDialog(null, "Insertion of attendance data failed");
                            }
                        }
                    }else {
                        JOptionPane.showMessageDialog(null, "Insertion of student data failed");
                    }
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed
public void showAllSRecord() {
    try {
    String sql2 = "SELECT branch FROM teacher WHERE id = ?";
    
    // Prepare and execute the statement to get the branch of the teacher
    try (PreparedStatement pstmtx = conn.prepareStatement(sql2)) {
        pstmtx.setInt(1, tID);
        try (ResultSet resx = pstmtx.executeQuery()) {
            // Check if there is a result
            if (resx.next()) {
                String b = resx.getString("branch");

                int clgid = LOGIN.CollegeIDHolder.getTeacherCollegeID();
                String sql = "SELECT * FROM student WHERE clgid=? AND stdbranch=?";
                
                // Prepare and execute the statement to get student data based on college ID and branch
                try (PreparedStatement preparedStatement = conn.prepareStatement(sql)) {
                    preparedStatement.setInt(1, clgid);
                    preparedStatement.setString(2, b);
                    try (ResultSet res = preparedStatement.executeQuery()) {
                        // Define column names for your table model
                        String[] columnNames = {"USN", "Student Name", "Father Name", "Mother Name", "Gender", "DOB", "Email", "Branch", "Semester", "Section", "Phone No", "Image Path"};
                        String[] columnNames2 = {"Semester", "Section","USN", "Student Name"};

                        // Create an empty table model with the defined column names
                        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
                        DefaultTableModel model2 = new DefaultTableModel(columnNames2, 0);

                        // Populate the table model with the query result
                        while (res.next()) {
                            Object[] row = {res.getString("USN"), res.getString("stdname"), res.getString("father"), res.getString("mother"), res.getString("gender"), res.getString("dob"),
                                    res.getString("stdmail"), res.getString("stdbranch"), res.getString("sem"), res.getString("stdsection"), res.getString("phone"), res.getString("siPath")};
                            model.addRow(row);
                            Object[] row2 = {res.getString("sem"), res.getString("stdsection"),res.getString("USN"), res.getString("stdname")};
                            model2.addRow(row2);
                        }

                        // Set the table model to the table
                        stable.setModel(model);
                        artable.setModel(model2);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "No branch found for the teacher ID: " + tID);
            }
        }
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "An error occurred while fetching data: " + e.getMessage());
}
}
public void showSRecord(String usn) {
    try {
        String sql2 = "SELECT branch FROM teacher WHERE id = ?";
        
        // Prepare and execute the statement to get the branch of the teacher
        try (PreparedStatement pstmtx = conn.prepareStatement(sql2)) {
            pstmtx.setInt(1, tID);
            try (ResultSet resx = pstmtx.executeQuery()) {
                // Check if there is a result
                if (resx.next()) {
                    String b = resx.getString("branch");

                    int clgid = LOGIN.CollegeIDHolder.getTeacherCollegeID();
                    String sql = "SELECT * FROM student WHERE clgid=? AND USN=? AND stdbranch=?";
                    
                    // Prepare and execute the statement to get student data based on college ID, USN, and branch
                    try (PreparedStatement preparedStatement = conn.prepareStatement(sql)) {
                        preparedStatement.setInt(1, clgid);
                        preparedStatement.setString(2, usn);
                        preparedStatement.setString(3, b);
                        
                        try (ResultSet res = preparedStatement.executeQuery()) {
                            // Define column names for your table model
                            String[] columnNames = {"USN", "Student Name", "Father Name", "Mother Name", "Gender", "DOB", "Email", "Branch", "Semester", "Section", "Phone No", "Image Path"};

                            // Create an empty table model with the defined column names
                            DefaultTableModel model = new DefaultTableModel(columnNames, 0);

                            // Populate the table model with the query result
                            while (res.next()) {
                                Object[] row = {res.getString("USN"), res.getString("stdname"), res.getString("father"), res.getString("mother"), res.getString("gender"), res.getString("dob"),
                                        res.getString("stdmail"), res.getString("stdbranch"), res.getString("sem"), res.getString("stdsection"), res.getString("phone"), res.getString("siPath")};
                                model.addRow(row);
                            }

                            // Set the table model to the table
                            stable.setModel(model);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "No branch found for the teacher ID: " + tID);
                }
            }
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "An error occurred while fetching data: " + e.getMessage());
    }
}
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (isEmpty()) {
            int tcID = LOGIN.CollegeIDHolder.getTeacherCollegeID();
            String collegeIDAsString = String.valueOf(tcID);
            String name = sname.getText();
            String usnx = usn.getText();
            String mail = semail.getText();
            String gender = (String) gen.getSelectedItem();
            String stbranch = sbranch.getText();
            String phone = sphone.getText();
            String section = (String) sec.getSelectedItem();
            String password = semail.getText(); // Assuming spassword is a JTextField for password input
            String fname = sfname.getText();
            String mname = smname.getText();
            String stsem = (String) sem.getSelectedItem();
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String date = dateFormat.format(dob.getDate());

            String checkDuplicateSql = "SELECT COUNT(*) FROM student WHERE stdmail = ?";
            try (PreparedStatement checkStatement = conn.prepareStatement(checkDuplicateSql)) {
                checkStatement.setString(1, mail);
                ResultSet resultSet = checkStatement.executeQuery();
                resultSet.next();
                int count = resultSet.getInt(1);
                if (count > 0) {
                    JOptionPane.showMessageDialog(null, "Email already exists");
                    return; // Exit the method, no need to proceed with insertion
                }

                // Hash the password using SHA-256
                String hashedPassword = pHash(password);

                // UPDATE student table
                String updateStudentSql = "UPDATE student SET clgid=?, stdmail=?, stdpassword=?, stdname=?,"
                + " stdbranch=?, sem=?, stdsection=?, father=?, mother=?, phone=?, USN=?, gender=?, dob=?, siPath=? WHERE USN=?";

                try (PreparedStatement preparedStatement = conn.prepareStatement(updateStudentSql)) {
                    String usny = susn.getText();
                    preparedStatement.setString(1, collegeIDAsString);
                    preparedStatement.setString(2, mail);
                    preparedStatement.setString(3, hashedPassword); // Use the hashed password
                    preparedStatement.setString(4, name);
                    preparedStatement.setString(5, stbranch);
                    preparedStatement.setString(6, stsem);
                    preparedStatement.setString(7, section);
                    preparedStatement.setString(8, fname);
                    preparedStatement.setString(9, mname);
                    preparedStatement.setString(10, phone);
                    preparedStatement.setString(11, usnx);
                    preparedStatement.setString(12, gender);
                    preparedStatement.setString(13, date);
                    preparedStatement.setString(14, imagePath);
                    preparedStatement.setString(15, usny);

                    int rowsAffected = preparedStatement.executeUpdate();

                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(null, "Student data is successfully updated");

                        // UPDATE attendance table
                        String updateAttendanceSql = "UPDATE attendance SET clgid=?, tid=?, stdname=?,"
                        + " bname=?, sem=?, sname=?, usn=?, WHERE usn=?";

                        String insertAttendanceSql = "INSERT INTO attendance(clgid, tid, stdname,"
                        + " bname, sem, sname, usn, date, attres) " +
                        "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
                        String updateAttendanceRep = "UPDATE attrec SET clgid=?, tid=?, stdname=?,"
                        + " branch=?, semester=?, section=?, usn=?, WHERE usn=?";

                        String insertAttendanceRep = "INSERT INTO attrec(clgid, tid, stdname,"
                        + " branch, semester, section, usn, classcount,attper) " +
                        "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?,?)";
                        PreparedStatement atps = null;
                        try {
                            String curdate = dateFormat.format(new Date());
                            // Prepare the update statement
                            atps = conn.prepareStatement(updateAttendanceSql);
                            atps.setString(1, collegeIDAsString);
                            atps.setInt(2, tID);
                            atps.setString(3, name);
                            atps.setString(4, stbranch);
                            atps.setString(5, stsem);
                            atps.setString(6, section);
                            atps.setString(7, usnx);
                            atps.setString(8, usny);

                            int attendanceRowsAffected = atps.executeUpdate();

                            if (attendanceRowsAffected > 0) {
                                JOptionPane.showMessageDialog(null, "Attendance data is successfully updated");
                                // Adjust this part based on your UI logic
                                showAllSRecord(); // Assuming this method displays all student records
                                PreparedStatement arps = conn.prepareStatement(updateAttendanceRep);
                                arps.setString(1, collegeIDAsString);
                                arps.setInt(2, tID);
                                arps.setString(3, name);
                                arps.setString(4, stbranch);
                                arps.setString(5, stsem);
                                arps.setString(6, section);
                                arps.setString(7, usnx);
                                arps.setString(8, usny);
                                int attendanceRec = arps.executeUpdate();

                                if (attendanceRec > 0) {
                                    JOptionPane.showMessageDialog(null, "Attendance data is successfully inserted");
                                    // Adjust this part based on your UI logic
                                } else {
                                    JOptionPane.showMessageDialog(null, "Insertion of attendance data failed");

                                }}
                                else {
                                    // If update didn't affect any rows, perform the insert
                                    atps = conn.prepareStatement(insertAttendanceSql);
                                    atps.setString(1, collegeIDAsString);
                                    atps.setInt(2, tID);
                                    atps.setString(3, name);
                                    atps.setString(4, stbranch);
                                    atps.setString(5, stsem);
                                    atps.setString(6, section);
                                    atps.setString(7, usnx);
                                    atps.setString(8, curdate);
                                    atps.setString(9, "Present");

                                    int attendanceRowsI = atps.executeUpdate();

                                    if (attendanceRowsI > 0) {
                                        JOptionPane.showMessageDialog(null, "Attendance data is successfully inserted");
                                        PreparedStatement arps = conn.prepareStatement(insertAttendanceRep);
                                        arps.setString(1, collegeIDAsString);
                                        arps.setInt(2, tID);
                                        arps.setString(3, name);
                                        arps.setString(4, stbranch);
                                        arps.setString(5, stsem);
                                        arps.setString(6, section);
                                        arps.setString(7, usnx);
                                        arps.setInt(9,0 );
                                        arps.setFloat(10, 0);

                                        int attendanceRec = arps.executeUpdate();

                                        if (attendanceRec > 0) {
                                            JOptionPane.showMessageDialog(null, "Attendance data is successfully inserted");
                                            // Adjust this part based on your UI logic
                                        } else {
                                            JOptionPane.showMessageDialog(null, "Insertion of attendance data failed");
                                        }
                                        // Adjust this part based on your UI logic
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Insertion of attendance data failed");
                                    }
                                }
                            }
                            catch (SQLException e) {
                                JOptionPane.showMessageDialog(null, "An error occurred while updating/inserting attendance data: " + e.getMessage());
                            } } else {
                                JOptionPane.showMessageDialog(null, "Updation of student data failed");
                            }
                        }
                    } catch (SQLException e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int yn = JOptionPane.showConfirmDialog(null, "All of Student data will be deleted", "Select", JOptionPane.OK_CANCEL_OPTION, 0);
        if (yn == JOptionPane.OK_OPTION) {
            try {
                String id = susn.getText();

                // Delete student record
                String deleteStudentSql = "DELETE FROM student WHERE USN=?";
                PreparedStatement deleteStudentStatement = conn.prepareStatement(deleteStudentSql);
                deleteStudentStatement.setString(1, id);
                deleteStudentStatement.executeUpdate();

                // Delete attendance records
                String deleteAttendanceSql = "DELETE FROM attendance WHERE usn=?";
                PreparedStatement deleteAttendanceStatement = conn.prepareStatement(deleteAttendanceSql);
                deleteAttendanceStatement.setString(1, id);
                deleteAttendanceStatement.executeUpdate();
                
                String deleteAttendanceRecSql = "DELETE FROM attrec WHERE usn=?";
                PreparedStatement deleteAttendanceRecStatement = conn.prepareStatement(deleteAttendanceRecSql);
                deleteAttendanceRecStatement.setString(1, id);
                deleteAttendanceRecStatement.executeUpdate();
                
                JOptionPane.showMessageDialog(null, "Student data and associated attendance records deleted successfully.");
            } catch (Exception e) {
    JOptionPane.showMessageDialog(null, e);
}

        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        int a= JOptionPane.showConfirmDialog(this,"Do you want to logout now?","Select",JOptionPane.YES_NO_OPTION);
        if(a==0){
            this.dispose();
            LOGIN object =new LOGIN();
            object.setVisible(true);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        clears();
        showAllSRecord();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        try {
            if (ausn.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Enter Student USN.");
                return;
            }
            String sql = "SELECT * FROM student WHERE usn=?";
            PreparedStatement preparedStatement = conn.prepareStatement(sql);
            String id = ausn.getText();
            preparedStatement.setString(1, id);

            ResultSet res = preparedStatement.executeQuery();

            if (res.next()) {
                        String[] columnNames2 = {"Semester", "Section","USN", "Student Name"};
                        DefaultTableModel model2 = new DefaultTableModel(columnNames2, 0);
                        Object[] row2 = {res.getString("sem"), res.getString("stdsection"),res.getString("USN"), res.getString("stdname")};
                        model2.addRow(row2);                        
                        artable.setModel(model2);
            } else {
                JOptionPane.showMessageDialog(null, "Record Not Found");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed
        // TODO add your handling code here:
        ausn.setText(null);
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jButton38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton38ActionPerformed
        // TODO add your handling code here:
               showAllSRecord();
    }//GEN-LAST:event_jButton38ActionPerformed

    private void jButton39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton39ActionPerformed
        // TODO add your handling code here:
        int a = JOptionPane.showConfirmDialog(this, "Do you want to logout now?", "Select", JOptionPane.YES_NO_OPTION);
        if (a == 0) {
            this.dispose();
            LOGIN object =new LOGIN();
            object.setVisible(true);
        }
    }//GEN-LAST:event_jButton39ActionPerformed

        
    private void artableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_artableMouseClicked
model1 = (DefaultTableModel) artable.getModel();
rowIndex = artable.getSelectedRow();

String stdusn = model1.getValueAt(rowIndex, 2).toString();

String sql = "SELECT * FROM attrec WHERE usn=?";
try (PreparedStatement pstmt = conn.prepareStatement(sql)) {
    pstmt.setString(1, stdusn);
    ResultSet res = pstmt.executeQuery();
    if (res.next()) {
        int teachid = res.getInt("tid");
        int ssem = res.getInt("semester");
        String ssec = res.getString("section");

        String sql2 = "SELECT * FROM classes WHERE tid=? AND sem=? AND sec=?";
        try (PreparedStatement pstmt2 = conn.prepareStatement(sql2)) {
            pstmt2.setInt(1, teachid);
            pstmt2.setInt(2, ssem);
            pstmt2.setString(3, ssec);
            ResultSet res2 = pstmt2.executeQuery();

            String[] columnNames = {"Subject", "Teacher", "Total Classes","Attendended Classes", "Attendance %"};
            DefaultTableModel model = new DefaultTableModel(columnNames, 0);

            while (res2.next()) {
                String sql3 = "SELECT * FROM teacher WHERE id=?";
                try (PreparedStatement pstmt3 = conn.prepareStatement(sql3)) {
                    pstmt3.setInt(1, teachid);
                    ResultSet res3 = pstmt3.executeQuery();
                    while (res3.next()) {

                        Object[] row = {
                            res2.getString("sub"),
                            res3.getString("name"),
                            res2.getString("totcls"),
                            res.getInt("classcount"),
                            res.getFloat("attper")
                        };
                        model.addRow(row);
                    }
                    attable.setModel(model);
                }
            }

            
        }
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Error occurred while executing SQL query: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_artableMouseClicked

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton40ActionPerformed
        // TODO add your handling code here:
  model1 = (DefaultTableModel) artable.getModel();
rowIndex = artable.getSelectedRow();
String semester = model1.getValueAt(rowIndex, 0).toString();
String section = model1.getValueAt(rowIndex, 1).toString();
String stdusn = model1.getValueAt(rowIndex, 2).toString();
String name = model1.getValueAt(rowIndex, 3).toString();
MessageFormat head = new MessageFormat("ATTENDENCE REPORT");
MessageFormat foot = new MessageFormat("USN: " + stdusn + " Student Name: " + name+" Semester: "+ semester+" Section: "+ section );

try{
    attable.print(JTable.PrintMode.FIT_WIDTH,head,foot);
}catch(PrinterException e){
    JOptionPane.showMessageDialog(null, e);
}


    }//GEN-LAST:event_jButton40ActionPerformed
private ImageIcon imageAdjust(String path,byte[] pic){
    ImageIcon myImg =null;
    if(path != null){
        myImg = new ImageIcon(path);
    }
    else{
        myImg = new ImageIcon(pic);
    }
    Image img = myImg.getImage();
    Image newImg = img.getScaledInstance(img2.getWidth(), img2.getHeight(), Image.SCALE_SMOOTH);
    ImageIcon icon = new ImageIcon(newImg);
    return icon;
}
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AHOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AHOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AHOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AHOME.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AHOME().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable artable;
    private javax.swing.JTable attable;
    private javax.swing.JTextField ausn;
    private com.toedter.calendar.JDateChooser dob;
    private javax.swing.JComboBox<String> gen;
    private javax.swing.JLabel img2;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField sbranch;
    private javax.swing.JComboBox<String> sec;
    private javax.swing.JComboBox<String> sem;
    private javax.swing.JTextField semail;
    private javax.swing.JTextField sfname;
    private javax.swing.JLabel simg;
    private javax.swing.JTextField smname;
    private javax.swing.JTextField sname;
    private javax.swing.JTextField sphone;
    private javax.swing.JTable stable;
    private javax.swing.JTextField susn;
    private javax.swing.JTextField tcid;
    private javax.swing.JTextField tdept;
    private javax.swing.JTextField temail;
    private javax.swing.JTextField tid;
    private javax.swing.JTextField tname;
    private javax.swing.JTextField tphone;
    private javax.swing.JTable ttable;
    private javax.swing.JTextField usn;
    // End of variables declaration//GEN-END:variables
}
